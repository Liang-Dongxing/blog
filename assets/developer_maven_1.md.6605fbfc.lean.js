import{_ as o,c,b as s,d as l,e as t,a,o as r,r as n}from"./app.0a9bfa31.js";const q=JSON.parse('{"title":"Maven 打包分离 jar 包里的 lib 依赖","description":"","frontmatter":{},"headers":[{"level":2,"title":"在需要拆分的模块中添加 Maven 配置","slug":"在需要拆分的模块中添加-maven-配置","link":"#在需要拆分的模块中添加-maven-配置","children":[]},{"level":2,"title":"使用到的maven插件","slug":"使用到的maven插件","link":"#使用到的maven插件","children":[]},{"level":2,"title":"Dependency plugin 有几个目标：","slug":"dependency-plugin-有几个目标","link":"#dependency-plugin-有几个目标","children":[]},{"level":2,"title":"Maven Build 生命周期","slug":"maven-build-生命周期","link":"#maven-build-生命周期","children":[]}],"relativePath":"developer/maven/1.md","lastUpdated":1682409655000}'),y={name:"developer/maven/1.md"},i=a("",6),D=s("thead",null,[s("tr",null,[s("th",{style:{"text-align":"left"}},"目标"),s("th",{style:{"text-align":"left"}},"描述")])],-1),F=s("tr",null,[s("td",{style:{"text-align":"left"}},"dependency:analyze"),s("td",{style:{"text-align":"left"}},"分析该项目的依赖关系并确定哪些是：已使用和已声明；已使用且未申报；未使用和声明。")],-1),d=s("tr",null,[s("td",{style:{"text-align":"left"}},"dependency:analyze-dep-mgt"),s("td",{style:{"text-align":"left"}},"分析您的项目依赖项并列出已解决的依赖项与 dependencyManagement 部分中列出的依赖项之间的不匹配项。")],-1),g=s("tr",null,[s("td",{style:{"text-align":"left"}},"dependency:analyze-only"),s("td",{style:{"text-align":"left"}},"与 analyze 相同，但要绑定在 pom 中。它不会分叉构建并执行测试编译。")],-1),A=s("tr",null,[s("td",{style:{"text-align":"left"}},"dependency:analyze-report"),s("td",{style:{"text-align":"left"}},"分析该项目的依赖关系并生成一份报告，总结哪些是：使用的和声明的；已使用且未申报；未使用和声明。")],-1),C=s("td",{style:{"text-align":"left"}},"dependency:analyze-duplicate",-1),f={style:{"text-align":"left"}},u=s("tr",null,[s("td",{style:{"text-align":"left"}},"dependency:build-classpath"),s("td",{style:{"text-align":"left"}},"告诉 Maven 以类路径格式从本地存储库输出依赖项的路径，以便在 java -cp 中使用。类路径文件也可以与主要工件一起附加和安装/部署。")],-1),x=s("tr",null,[s("td",{style:{"text-align":"left"}},"dependency:copy"),s("td",{style:{"text-align":"left"}},"获取插件配置部分中定义的工件列表，并将它们复制到指定位置，如果需要，重命名它们或删除版本。如果远程存储库中的工件不存在于本地存储库或反应器中，则此目标可以解析它们。")],-1),h=s("tr",null,[s("td",{style:{"text-align":"left"}},"dependency:copy-dependencies"),s("td",{style:{"text-align":"left"}},"获取项目直接依赖项和可选的传递依赖项的列表，并将它们复制到指定位置，如果需要，删除版本。这个目标也可以从命令行运行。")],-1),_=s("tr",null,[s("td",{style:{"text-align":"left"}},"dependency:display-ancestors"),s("td",{style:{"text-align":"left"}},"显示项目的所有祖先 POM。这在持续集成系统中可能很有用，在该系统中您想知道项目的所有父 pom。这个目标也可以从命令行运行。")],-1),v=s("tr",null,[s("td",{style:{"text-align":"left"}},"dependency:get"),s("td",{style:{"text-align":"left"}},"从指定的远程存储库解析单个工件，最终传递。")],-1),m=s("tr",null,[s("td",{style:{"text-align":"left"}},"dependency:go-offline"),s("td",{style:{"text-align":"left"}},"告诉 Maven 解决该项目所依赖的所有内容（依赖项、插件、报告），为下线做准备。")],-1),b=s("tr",null,[s("td",{style:{"text-align":"left"}},"dependency:list"),s("td",{style:{"text-align":"left"}},"resolve 的别名，它列出了这个项目的依赖项。")],-1),I=s("tr",null,[s("td",{style:{"text-align":"left"}},"dependency:list-classes"),s("td",{style:{"text-align":"left"}},"显示在指定工件中找到的所有类的完全包限定名称。")],-1),k=s("tr",null,[s("td",{style:{"text-align":"left"}},"dependency:list-repositories"),s("td",{style:{"text-align":"left"}},"显示所有项目依赖项，然后列出使用的存储库。")],-1),M=s("tr",null,[s("td",{style:{"text-align":"left"}},"dependency:properties"),s("td",{style:{"text-align":"left"}},"为每个包含文件系统上的工件的项目依赖项设置一个属性。")],-1),T=s("tr",null,[s("td",{style:{"text-align":"left"}},"dependency:purge-local-repository"),s("td",{style:{"text-align":"left"}},"告诉 Maven 从本地存储库中清除依赖工件文件，并可选择重新解析它们。")],-1),S=s("tr",null,[s("td",{style:{"text-align":"left"}},"dependency:resolve"),s("td",{style:{"text-align":"left"}},"告诉 Maven 解析所有依赖项并显示版本。JAVA 9 注意： 使用 Java 9 运行时将显示模块名称。")],-1),j=s("tr",null,[s("td",{style:{"text-align":"left"}},"dependency:resolve-plugins"),s("td",{style:{"text-align":"left"}},"告诉 Maven 解析插件和它们的依赖关系。")],-1),E=s("tr",null,[s("td",{style:{"text-align":"left"}},"dependency:sources"),s("td",{style:{"text-align":"left"}},"告诉 Maven 解析所有依赖项及其源附件，并显示版本。")],-1),N=s("tr",null,[s("td",{style:{"text-align":"left"}},"dependency:tree"),s("td",{style:{"text-align":"left"}},"显示这个项目的依赖关系树。")],-1),V=s("tr",null,[s("td",{style:{"text-align":"left"}},"dependency:unpack"),s("td",{style:{"text-align":"left"}},"像 copy 但解包。")],-1),P=s("tr",null,[s("td",{style:{"text-align":"left"}},"dependency:unpack-dependencies"),s("td",{style:{"text-align":"left"}},"像 copy-dependencies 但解包。")],-1),z=a("",2);function J($,B,R,O,w,U){const e=n("dependencies"),p=n("dependencyManagement");return r(),c("div",null,[i,s("table",null,[D,s("tbody",null,[F,d,g,A,s("tr",null,[C,s("td",f,[l("分析 pom.xml 中的"),t(e),l("和"),t(p),l("标签并确定重复声明的依赖项。")])]),u,x,h,_,v,m,b,I,k,M,T,S,j,E,N,V,P])]),z])}const G=o(y,[["render",J]]);export{q as __pageData,G as default};
